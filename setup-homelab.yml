---
- name: Install k3s cluster
  import_playbook: k3s.orchestration.site
  
- name: Fetch kubeconfig from master
  hosts: server
  gather_facts: false
  tasks:
    - name: Fetch kubeconfig file
      ansible.builtin.fetch:
        src: /etc/rancher/k3s/k3s.yaml
        dest: "{{ lookup('env', 'HOME') }}/.kube/config-homelab"
        flat: yes
      run_once: true

- name: Set kubeconfig locally
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Set kubeconfig to use server ip
      ansible.builtin.replace:
        path: "{{ lookup('env', 'HOME') }}/.kube/config-homelab"
        regexp: 'https://127\.0\.0\.1:6443'
        replace: "https://{{ groups['server'][0] }}:6443"

- name: Setup ArgoCD
  hosts: localhost
  connection: local
  gather_facts: false
  environment:
    K8S_AUTH_KUBECONFIG: "{{ lookup('env', 'HOME') }}/.kube/config-homelab"
  tasks:
    - name: Create argocd namespace
      kubernetes.core.k8s:
        name: argocd
        api_version: v1
        kind: Namespace
        state: present

    - name: Install ArgoCD
      kubernetes.core.k8s:
        state: present
        src: https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
        namespace: argocd
    
    - name: Patch argocd-server deployment for Ingress
      kubernetes.core.k8s_json_patch:
        kind: Deployment
        name: argocd-server
        namespace: argocd
        patch:
          - op: add
            path: /spec/template/spec/containers/0/args/-
            value: --insecure

    - name: Create Ingress for ArgoCD
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: networking.k8s.io/v1
          kind: Ingress
          metadata:
            name: argocd-server-ingress
            namespace: argocd
            annotations:
              cert-manager.io/cluster-issuer: "selfsigned-issuer"
              kubernetes.io/ingress.class: traefik
          spec:
            rules:
              - host: "argocd.homelab.local"
                http:
                  paths:
                    - path: /
                      pathType: Prefix
                      backend:
                        service:
                          name: argocd-server
                          port:
                            number: 80
            tls:
              - hosts:
                  - argocd.homelab.local
                secretName: argocd-server-tls

    - name: Start ArgoCD root application
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: root
            namespace: argocd
            finalizers:
              - argoproj.io/resources-finalizer.argocd.argoproj.io
          spec:
            project: default
            source:
              repoURL: https://github.com/reecetec/homelab-gitops.git
              targetRevision: HEAD
              path: apps
            destination:
              server: https://kubernetes.default.svc
              namespace: argocd
            syncPolicy:
              automated:
                prune: true
                selfHeal: true